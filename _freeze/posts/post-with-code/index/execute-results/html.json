{
  "hash": "0555c78b53c1ad5003b77bb6c4075f45",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Palmer Penguins Analysis\"\nauthor: \"zoozoo\"\ndate: \"2025-03-07\"\ncategories: [news, code, analysis]\nimage: \"lter_penguins.png\"\n---\n\n\n\n\n## 8조 (이주형, 이창혁, 정은주 )\n![](https://allisonhorst.github.io/palmerpenguins/reference/figures/lter_penguins.png)\n\n### 팔마 펭귄 데이터 불러오기 & 데이터 확인\n\n::: {#23e945ad .cell execution_count=1}\n``` {.python .cell-code}\nimport numpy as np \nimport pandas as pd \nfrom palmerpenguins import load_penguins\npenguins = load_penguins()\n# 전체 데이터 확인\npenguins.info()\n# penguins 데이터 columns 이름\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 344 entries, 0 to 343\nData columns (total 8 columns):\n #   Column             Non-Null Count  Dtype  \n---  ------             --------------  -----  \n 0   species            344 non-null    object \n 1   island             344 non-null    object \n 2   bill_length_mm     342 non-null    float64\n 3   bill_depth_mm      342 non-null    float64\n 4   flipper_length_mm  342 non-null    float64\n 5   body_mass_g        342 non-null    float64\n 6   sex                333 non-null    object \n 7   year               344 non-null    int64  \ndtypes: float64(4), int64(1), object(3)\nmemory usage: 21.6+ KB\n```\n:::\n:::\n\n\n<br>\n\n### 필요 없는 column 제거\n\n::: {#72695d1b .cell execution_count=2}\n``` {.python .cell-code}\nprint(penguins['year'].unique())\nprint('-'*50,'\\n')\ndel penguins['year']\nprint(penguins.head())\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[2007 2008 2009]\n-------------------------------------------------- \n\n  species     island  bill_length_mm  bill_depth_mm  flipper_length_mm  \\\n0  Adelie  Torgersen            39.1           18.7              181.0   \n1  Adelie  Torgersen            39.5           17.4              186.0   \n2  Adelie  Torgersen            40.3           18.0              195.0   \n3  Adelie  Torgersen             NaN            NaN                NaN   \n4  Adelie  Torgersen            36.7           19.3              193.0   \n\n   body_mass_g     sex  \n0       3750.0    male  \n1       3800.0  female  \n2       3250.0  female  \n3          NaN     NaN  \n4       3450.0  female  \n```\n:::\n:::\n\n\n* year 컬럼이 2007~2009 범위로 분포에 있어 분석에 도움되지 않는 column이라 생각\n<br>\n\n### 종 별 수치 정보\n\n::: {#19cc9f4d .cell execution_count=3}\n``` {.python .cell-code}\nade_desc = penguins.loc[penguins['species'] == 'Adelie'].describe()\ngen_desc = penguins.loc[penguins['species'] == 'Gentoo'].describe()\nchin_desc = penguins.loc[penguins['species'] == 'Chinstrap'].describe()\n\nade_mean = ade_desc.loc['mean']\ngen_mean = gen_desc.loc['mean']\nchin_mean = chin_desc.loc['mean']\n\npeng_mean = pd.concat([ade_mean, gen_mean, chin_mean], axis=1)\npeng_mean.columns= ['Adelie', 'Gentoo', 'Chinstrap']\npeng_mean\n```\n\n::: {.cell-output .cell-output-display execution_count=21}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Adelie</th>\n      <th>Gentoo</th>\n      <th>Chinstrap</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>bill_length_mm</th>\n      <td>38.791391</td>\n      <td>47.504878</td>\n      <td>48.833824</td>\n    </tr>\n    <tr>\n      <th>bill_depth_mm</th>\n      <td>18.346358</td>\n      <td>14.982114</td>\n      <td>18.420588</td>\n    </tr>\n    <tr>\n      <th>flipper_length_mm</th>\n      <td>189.953642</td>\n      <td>217.186992</td>\n      <td>195.823529</td>\n    </tr>\n    <tr>\n      <th>body_mass_g</th>\n      <td>3700.662252</td>\n      <td>5076.016260</td>\n      <td>3733.088235</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n- 알 수 있는 점\n    - Adelie\n        - Adelie 종은 bill_length_mm의 평균이 38.79로 가장 짧은 편이다. \n    - Gentoo\n        - Gentoo 종은 body_mass_g의 평균이 5076.01로 가장 무겁다.\n        - flipper_length_mm의 길이의 평균이 217.18로 가장 길다. \n    - Chinstrap\n        - 수치 데이터로 뚜렷한 특징을 찾을 수 없다. \n        - 굳이 꼽자면 데이터수가 가장 적다. 희귀한가????\n            - 두 가지 가능성 : \n                - dream 섬에서 조사를 많이 하지 않았다. \n                - chinstrap 종의 펭귄의 개체 수가 적다. \n<br>\n\n### 성별 파악\n\n::: {#88e6dbb4 .cell execution_count=4}\n``` {.python .cell-code}\nadelie_sex = penguins.loc[penguins['species'] == 'Adelie', 'sex'].value_counts()\ngentoo_sex = penguins.loc[penguins['species'] == 'Gentoo', 'sex'].value_counts()\nchinstrap_sex = penguins.loc[penguins['species'] == 'Chinstrap', 'sex'].value_counts()\n\ntotal_sex = pd.concat([adelie_sex,gentoo_sex,chinstrap_sex],axis=1)\ntotal_sex.columns= ['adelie','gentoo','chinstrap']\ntotal_sex\n```\n\n::: {.cell-output .cell-output-display execution_count=22}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>adelie</th>\n      <th>gentoo</th>\n      <th>chinstrap</th>\n    </tr>\n    <tr>\n      <th>sex</th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>male</th>\n      <td>73</td>\n      <td>61</td>\n      <td>34</td>\n    </tr>\n    <tr>\n      <th>female</th>\n      <td>73</td>\n      <td>58</td>\n      <td>34</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n<br>\n\n### 서식지 파악\n\n::: {#a3445d25 .cell execution_count=5}\n``` {.python .cell-code}\nadelie_island = penguins.loc[penguins['species'] == 'Adelie', 'island'].value_counts()\n# Adelie 종은 Dream, Torgersen, Biscoe 섬에 고루 서식한다.\n\ngentoo_island = penguins.loc[penguins['species'] == 'Gentoo', 'island'].value_counts()\n# Gentoo 종은 Biscoe 섬에만 서식한다.\n\nchinstrap_island = penguins.loc[penguins['species'] == 'Chinstrap', 'island'].value_counts()\n# Chinstrap 종은 Dream  섬에만 서식한다.\n\ntotal_island = pd.concat([adelie_island,gentoo_island,chinstrap_island],axis=1)\ntotal_island.columns= ['adelie','gentoo','chinstrap']\ntotal_island = total_island.fillna(0)\ntotal_island\n```\n\n::: {.cell-output .cell-output-display execution_count=23}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>adelie</th>\n      <th>gentoo</th>\n      <th>chinstrap</th>\n    </tr>\n    <tr>\n      <th>island</th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Dream</th>\n      <td>56</td>\n      <td>0.0</td>\n      <td>68.0</td>\n    </tr>\n    <tr>\n      <th>Torgersen</th>\n      <td>52</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Biscoe</th>\n      <td>44</td>\n      <td>124.0</td>\n      <td>0.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n- adelie 한 종만 3곳의의 island에 서식하고 있음 \n\n<br>\n\n### adelie 종에 대한 서식지 별 수치 정보 \n\n::: {#69f68111 .cell execution_count=6}\n``` {.python .cell-code}\nade_desc =penguins.loc[(penguins['species'] == 'Adelie') & (penguins['island']=='Dream')].describe()\n\ngen_desc =penguins.loc[(penguins['species'] == 'Adelie') & (penguins['island']=='Torgersen')].describe()\n\nchin_desc = penguins.loc[(penguins['species'] == 'Adelie') & (penguins['island']=='Biscoe')].describe()\n\nade_mean = ade_desc.loc['mean']\ngen_mean = gen_desc.loc['mean']\nchin_mean = chin_desc.loc['mean']\n\npeng_mean = pd.concat([ade_mean, gen_mean, chin_mean], axis=1)\npeng_mean.columns= ['Dream', 'Torgersen', 'Biscoe']\npeng_mean\n```\n\n::: {.cell-output .cell-output-display execution_count=24}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Dream</th>\n      <th>Torgersen</th>\n      <th>Biscoe</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>bill_length_mm</th>\n      <td>38.501786</td>\n      <td>38.950980</td>\n      <td>38.975000</td>\n    </tr>\n    <tr>\n      <th>bill_depth_mm</th>\n      <td>18.251786</td>\n      <td>18.429412</td>\n      <td>18.370455</td>\n    </tr>\n    <tr>\n      <th>flipper_length_mm</th>\n      <td>189.732143</td>\n      <td>191.196078</td>\n      <td>188.795455</td>\n    </tr>\n    <tr>\n      <th>body_mass_g</th>\n      <td>3688.392857</td>\n      <td>3706.372549</td>\n      <td>3709.659091</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n- 서식지 별로 큰 차이는 보이지 않음\n<br>\n\n### 요약\n- adelie\n    - Adelie 종의 bill_length_mm가 가장 짧은 편이다. \n    - Adelie 종은 Dream, Torgersen, Biscoe 섬에 고루 서식한다.\n\n- Gentoo\n\n    - Gentoo 종의 body_mass_g는 가장 무거운 편이다.\n    - Gentoo 종의 flipper_length_mm의 길이의 평균이 가장 길다. \n    - Gentoo 종은 Biscoe 섬에만 서식한다.\n\n- Chinstrap\n    -  Chinstrap 종은 수치 데이터로 뚜렷한 특징을 찾을 수 없다. \n    -  Chinstrap 종은 Dream  섬에만 서식한다.\n\n- 전체\n    - 종별 성별은 고르게 분포되어 있다.\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}